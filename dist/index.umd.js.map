{"version":3,"file":"index.umd.js","sources":["../src/reporter.ts","../src/indexUmd.ts"],"sourcesContent":["export function cspConsoleReporting(reportUrl: string) {\n\n    console.log('CSP Console Reporting initialized with report URL:', reportUrl);\n\n    window.addEventListener('securitypolicyviolation', function (event) {\n        const violationDetails = {\n            blockedURI: event.blockedURI,\n            violatedDirective: event.violatedDirective,\n            sourceFile: event.sourceFile,\n            lineNumber: event.lineNumber,\n            columnNumber: event.columnNumber,\n            statusCode: event.statusCode,\n        };\n\n        console.log('Reporting CSP violation from package:', violationDetails);\n\n        fetch(reportUrl, {\n            method: 'POST',\n            body: JSON.stringify(violationDetails),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('CSP violation report sent:', data);\n            })\n            .catch(error => {\n                console.error('Error sending CSP violation report:', error);\n            });\n    });\n}\n","import { cspConsoleReporting } from \"./reporter\";\n\n(function (global, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = factory();\n    } else { // @ts-expect-error define function is part of the Asynchronous Module Definition (AMD) module system, typically used with module loaders like RequireJS\n        if (typeof define === 'function' && define.amd) {\n            // @ts-expect-error define function is part of the Asynchronous Module Definition (AMD) module system, typically used with module loaders like RequireJS\n            define([], factory);\n        } else {\n            // @ts-expect-error TypeScript doesn't know what global is in this context\n            global.cspConsoleReporting = factory();\n        }\n    }\n}(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : this, function () {\n    return cspConsoleReporting;\n}));\n"],"names":["this"],"mappings":";;;;;IAAM,SAAU,mBAAmB,CAAC,SAAiB,EAAA;IAEjD,IAAA,OAAO,CAAC,GAAG,CAAC,oDAAoD,EAAE,SAAS,CAAC;IAE5E,IAAA,MAAM,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,UAAU,KAAK,EAAA;IAC9D,QAAA,MAAM,gBAAgB,GAAG;gBACrB,UAAU,EAAE,KAAK,CAAC,UAAU;gBAC5B,iBAAiB,EAAE,KAAK,CAAC,iBAAiB;gBAC1C,UAAU,EAAE,KAAK,CAAC,UAAU;gBAC5B,UAAU,EAAE,KAAK,CAAC,UAAU;gBAC5B,YAAY,EAAE,KAAK,CAAC,YAAY;gBAChC,UAAU,EAAE,KAAK,CAAC,UAAU;aAC/B;IAED,QAAA,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,gBAAgB,CAAC;YAEtE,KAAK,CAAC,SAAS,EAAE;IACb,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACtC,YAAA,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;aAClD;iBACI,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;iBAChC,IAAI,CAAC,IAAI,IAAG;IACT,YAAA,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAAC;IACnD,SAAC;iBACA,KAAK,CAAC,KAAK,IAAG;IACX,YAAA,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC;IAC/D,SAAC,CAAC;IACV,KAAC,CAAC;IACN;;IC3BA,CAAC,UAAU,MAAM,EAAE,OAAO,EAAA;IACtB,IAAA,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;IAClE,QAAA,MAAM,CAAC,OAAO,GAAG,OAAO,EAAE;;IACvB,SAAA;YACH,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;;IAE5C,YAAA,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC;;iBAChB;;IAEH,YAAA,MAAM,CAAC,mBAAmB,GAAG,OAAO,EAAE;;;IAGlD,CAAC,CAAC,OAAO,UAAU,KAAK,WAAW,GAAG,UAAU,GAAG,OAAO,IAAI,KAAK,WAAW,GAAG,IAAI,GAAGA,MAAI,EAAE,YAAA;IAC1F,IAAA,OAAO,mBAAmB;IAC9B,CAAC,CAAC;;;;;;"}